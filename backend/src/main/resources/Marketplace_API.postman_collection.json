{
  "info": {
    "name": "Marketplace API - Complete Test Suite",
    "description": "完整的二手市场API测试集合\n\n测试顺序:\n1. User模块 (注册→登录)\n2. Item模块 (创建→查询→更新)\n3. Tag模块\n4. Post模块\n5. Conversation模块 (开发中)\n6. Message模块 (开发中)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "itemId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "tagId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "postId",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. User API",
      "item": [
        {
          "name": "1.1 注册新用户",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// 检查状态码",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "// 保存userId到环境变量",
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"userId\", jsonData.userId);",
                  "    console.log(\"Saved userId: \" + jsonData.userId);",
                  "}",
                  "",
                  "// 检查密码已加密",
                  "pm.test(\"Password is hashed\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.password).to.not.equal(\"password123\");",
                  "    pm.expect(jsonData.password).to.include(\"$2\"); // BCrypt prefix",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\",\n  \"nickname\": \"测试用户\",\n  \"phoneNum\": 13800138000,\n  \"address\": \"北京市朝阳区\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "register"]
            },
            "description": "注册新用户,密码会自动加密"
          },
          "response": []
        },
        {
          "name": "1.2 用户登录",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has userId\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('userId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            },
            "description": "用户登录验证"
          },
          "response": []
        },
        {
          "name": "1.3 获取用户信息",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User has email\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "根据ID获取用户详情"
          },
          "response": []
        },
        {
          "name": "1.4 更新用户信息",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"nickname\": \"更新后的昵称\",\n  \"phoneNum\": 13900139000,\n  \"address\": \"上海市浦东新区\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "更新用户信息(除密码外)"
          },
          "response": []
        }
      ],
      "description": "用户注册、登录、查询、更新功能"
    },
    {
      "name": "2. Item API",
      "item": [
        {
          "name": "2.1 创建商品",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"itemId\", jsonData.itemId);",
                  "    console.log(\"Saved itemId: \" + jsonData.itemId);",
                  "}",
                  "",
                  "pm.test(\"Item has Location header\", function () {",
                  "    pm.response.to.have.header(\"Location\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"itemOwnerId\": {{userId}},\n  \"itemName\": \"二手MacBook Pro 2020\",\n  \"productDetail\": \"M1芯片,16GB内存,512GB固态硬盘,成色9成新\",\n  \"productPrice\": 8999.00,\n  \"productImg\": \"macbook.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items"]
            },
            "description": "创建新商品,返回201状态码和Location头"
          },
          "response": []
        },
        {
          "name": "2.2 获取所有商品(分页)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is paginated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('totalElements');",
                  "    pm.expect(jsonData).to.have.property('totalPages');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/items?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items"],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "页码(从0开始)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "每页数量"
                }
              ]
            },
            "description": "获取商品列表,支持分页"
          },
          "response": []
        },
        {
          "name": "2.3 搜索商品(关键词)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/items?q=MacBook&page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items"],
              "query": [
                {
                  "key": "q",
                  "value": "MacBook",
                  "description": "搜索关键词"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "根据关键词搜索商品名称或详情"
          },
          "response": []
        },
        {
          "name": "2.4 筛选未售出商品",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/items?sold=false",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items"],
              "query": [
                {
                  "key": "sold",
                  "value": "false",
                  "description": "true=已售出, false=未售出"
                }
              ]
            },
            "description": "筛选未售出的商品"
          },
          "response": []
        },
        {
          "name": "2.5 商品排序(价格升序)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/items?sort=productPrice,asc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items"],
              "query": [
                {
                  "key": "sort",
                  "value": "productPrice,asc",
                  "description": "排序字段,方向 (asc/desc)"
                }
              ]
            },
            "description": "按价格升序排序商品"
          },
          "response": []
        },
        {
          "name": "2.6 获取单个商品",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/items/{{itemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items", "{{itemId}}"]
            },
            "description": "根据ID获取商品详情"
          },
          "response": []
        },
        {
          "name": "2.7 更新商品",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productPrice\": 8500.00,\n  \"productDetail\": \"价格已降!\",\n  \"sold\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/items/{{itemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items", "{{itemId}}"]
            },
            "description": "部分更新商品信息,只更新提供的字段"
          },
          "response": []
        },
        {
          "name": "2.8 标记为已售出",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sold\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/items/{{itemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items", "{{itemId}}"]
            },
            "description": "将商品标记为已售出"
          },
          "response": []
        }
      ],
      "description": "商品的完整CRUD操作,包括搜索、筛选、排序"
    },
    {
      "name": "3. Tag API",
      "item": [
        {
          "name": "3.1 创建标签",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"tagId\", jsonData.tagId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tagContent\": \"电子产品\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tags",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tags"]
            },
            "description": "创建新标签"
          },
          "response": []
        },
        {
          "name": "3.2 获取所有标签",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tags",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tags"]
            },
            "description": "获取所有标签列表"
          },
          "response": []
        },
        {
          "name": "3.3 获取单个标签",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tags/{{tagId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tags", "{{tagId}}"]
            },
            "description": "根据ID获取标签"
          },
          "response": []
        }
      ],
      "description": "标签管理功能"
    },
    {
      "name": "4. Post API",
      "item": [
        {
          "name": "4.1 创建帖子",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"postId\", jsonData.postId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"postedItemId\": {{itemId}},\n  \"tagId\": {{tagId}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts?ownerId={{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "ownerId",
                  "value": "{{userId}}",
                  "description": "帖子所有者ID(临时方案,生产环境应从JWT获取)"
                }
              ]
            },
            "description": "创建新帖子,绑定商品和标签"
          },
          "response": []
        },
        {
          "name": "4.2 获取所有帖子",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            },
            "description": "获取所有帖子"
          },
          "response": []
        },
        {
          "name": "4.3 按标签筛选帖子",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts?tagId={{tagId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "tagId",
                  "value": "{{tagId}}",
                  "description": "标签ID"
                }
              ]
            },
            "description": "根据标签ID筛选帖子"
          },
          "response": []
        },
        {
          "name": "4.4 获取单个帖子",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"]
            },
            "description": "根据ID获取帖子详情"
          },
          "response": []
        },
        {
          "name": "4.5 删除帖子",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}?userId={{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}",
                  "description": "当前用户ID(用于权限验证)"
                }
              ]
            },
            "description": "删除帖子(需要权限验证)"
          },
          "response": []
        }
      ],
      "description": "帖子发布、查询、删除功能"
    },
    {
      "name": "5. Conversation API (开发中)",
      "item": [
        {
          "name": "5.1 创建会话",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/conversations?buyerId=1&sellerId=2",
              "host": ["{{baseUrl}}"],
              "path": ["api", "conversations"],
              "query": [
                {
                  "key": "buyerId",
                  "value": "1"
                },
                {
                  "key": "sellerId",
                  "value": "2"
                }
              ]
            },
            "description": "创建买家和卖家之间的会话"
          },
          "response": []
        },
        {
          "name": "5.2 获取用户会话列表",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/conversations/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "conversations", "{{userId}}"]
            },
            "description": "获取某用户的所有会话"
          },
          "response": []
        }
      ],
      "description": "会话管理(Conversation模块)"
    },
    {
      "name": "6. Message API (开发中)",
      "item": [
        {
          "name": "6.1 发送消息",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"senderId\": 1,\n  \"conversationId\": 1,\n  \"messageContent\": \"你好,这个商品还在吗?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messages"]
            },
            "description": "发送新消息到指定会话"
          },
          "response": []
        },
        {
          "name": "6.2 获取会话消息",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messages/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messages", "1"]
            },
            "description": "获取指定会话的所有消息"
          },
          "response": []
        }
      ],
      "description": "消息发送和查询(Message模块)"
    },
    {
      "name": "❌ Error Cases",
      "item": [
        {
          "name": "注册重复邮箱(409)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 409 or 500\", function () {",
                  "    pm.expect([409, 500]).to.include(pm.response.code);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\",\n  \"nickname\": \"重复用户\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "register"]
            },
            "description": "测试重复邮箱注册,应返回409或500"
          },
          "response": []
        },
        {
          "name": "错误密码登录(500)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            },
            "description": "测试错误密码,应返回500"
          },
          "response": []
        },
        {
          "name": "获取不存在的商品(404)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/items/99999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items", "99999"]
            },
            "description": "测试不存在的商品ID,应返回404"
          },
          "response": []
        },
        {
          "name": "无效价格创建商品(400)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"itemOwnerId\": 1,\n  \"itemName\": \"测试商品\",\n  \"productPrice\": -100\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "items"]
            },
            "description": "测试负数价格,应返回400"
          },
          "response": []
        }
      ],
      "description": "各种错误场景测试"
    }
  ]
}